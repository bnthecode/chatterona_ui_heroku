[{"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\index.js":"1","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\App.js":"2","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\reportWebVitals.js":"3","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\styles\\muiTheme.js":"4","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\redux\\store.js":"5","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Router.js":"6","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\redux\\history.js":"7","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\redux\\reducers\\rootReducer.js":"8","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\redux\\reducers\\cacheReducer.js":"9","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\redux\\reducers\\authReducer.js":"10","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\redux\\reducers\\appReducer.js":"11","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\pages\\MobileLanding.js":"12","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\pages\\Login.js":"13","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\pages\\Main.js":"14","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\config.js":"15","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\services\\Websocket.js":"16","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\redux\\actions\\cacheActions.js":"17","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\redux\\actions\\appActions.js":"18","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\http\\servers-http.js":"19","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\http\\channels-http.js":"20","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\http\\users.http.js":"21","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\redux\\actions\\authActions.js":"22","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\http\\http-configuration.js":"23","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\constants\\emojis.js":"24","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\utilities\\global-utilities.js":"25","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\utilities\\component-utilities.js":"26","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\_reusable\\Drawer.js":"27","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\_reusable\\Stepper.js":"28","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\pages\\UserSettings.js":"29","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\_reusable\\List.js":"30","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\_reusable\\ListItem.js":"31","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Header.js":"32","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Chat\\Chat.js":"33","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Servers\\Servers.js":"34","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Servers\\ServerUsers.js":"35","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Channels\\Channels.js":"36","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Servers\\ServerListItem.js":"37","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Chat\\Typers.js":"38","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Chat\\MessageInput.js":"39","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\AddServerDialog\\AddServerDialog.js":"40","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Messages\\Messages.js":"41","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Channels\\ChannelBottomUser.js":"42","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Channels\\ChannelGroup.js":"43","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Channels\\HeaderOptions.js":"44","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Channels\\CreateChannelDialog.js":"45","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Channels\\ChannelHeader.js":"46","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Messages\\NewDayDivider.js":"47","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Messages\\NoMessagesDisplay.js":"48","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Messages\\MessageItem.js":"49","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Channels\\ChannelBottomGame.js":"50","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Channels\\ChannelListItem.js":"51","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\AddServerDialog\\pages\\PageOne.js":"52","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\AddServerDialog\\pages\\PageTwo.js":"53","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\AddServerDialog\\pages\\PageThree.js":"54","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Messages\\MessageItemText.js":"55","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Messages\\EmojiPicker.js":"56","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Messages\\MessageItemImage.js":"57","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Messages\\MessageItemLink.js":"58","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\AddServerDialog\\DialogItem.js":"59","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\MyAccount.js":"60","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\PrivacyAndSafety.js":"61","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\Connections.js":"62","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\Subscriptions.js":"63","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\ServerBoost.js":"64","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\TextAndImages.js":"65","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\Appearance.js":"66","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\AuthorizedApps.js":"67","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\VoiceAndVideo.js":"68","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\Notifications.js":"69","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\Language.js":"70","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\GiftInventory.js":"71","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\Keybinds.js":"72","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\HypeSquad.js":"73","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\StreamerMode.js":"74","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\ChangeLog.js":"75","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\LogOut.js":"76","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\Billing.js":"77","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\_reusable\\ListItemHeader.js":"78"},{"size":997,"mtime":1613058331201,"results":"79","hashOfConfig":"80"},{"size":454,"mtime":1613380747123,"results":"81","hashOfConfig":"80"},{"size":375,"mtime":1613058331206,"results":"82","hashOfConfig":"80"},{"size":3469,"mtime":1613220563900,"results":"83","hashOfConfig":"80"},{"size":620,"mtime":1613342508275,"results":"84","hashOfConfig":"80"},{"size":1084,"mtime":1613440564736,"results":"85","hashOfConfig":"80"},{"size":115,"mtime":1613058331204,"results":"86","hashOfConfig":"80"},{"size":891,"mtime":1613381235204,"results":"87","hashOfConfig":"80"},{"size":423,"mtime":1613139234939,"results":"88","hashOfConfig":"80"},{"size":417,"mtime":1613384338126,"results":"89","hashOfConfig":"80"},{"size":1074,"mtime":1613137479505,"results":"90","hashOfConfig":"80"},{"size":765,"mtime":1613058331202,"results":"91","hashOfConfig":"80"},{"size":10859,"mtime":1613414094952,"results":"92","hashOfConfig":"80"},{"size":6117,"mtime":1613480999219,"results":"93","hashOfConfig":"80"},{"size":1415,"mtime":1613410316223,"results":"94","hashOfConfig":"80"},{"size":2337,"mtime":1613481031039,"results":"95","hashOfConfig":"80"},{"size":211,"mtime":1613139322634,"results":"96","hashOfConfig":"80"},{"size":768,"mtime":1613137315064,"results":"97","hashOfConfig":"80"},{"size":617,"mtime":1613137250540,"results":"98","hashOfConfig":"80"},{"size":809,"mtime":1613399127515,"results":"99","hashOfConfig":"80"},{"size":485,"mtime":1613383663049,"results":"100","hashOfConfig":"80"},{"size":115,"mtime":1613384340096,"results":"101","hashOfConfig":"80"},{"size":875,"mtime":1613389076060,"results":"102","hashOfConfig":"80"},{"size":2048,"mtime":1613209984494,"results":"103","hashOfConfig":"80"},{"size":1464,"mtime":1613408666461,"results":"104","hashOfConfig":"80"},{"size":374,"mtime":1613409167223,"results":"105","hashOfConfig":"80"},{"size":697,"mtime":1613436831730,"results":"106","hashOfConfig":"80"},{"size":502,"mtime":1613436860464,"results":"107","hashOfConfig":"80"},{"size":5201,"mtime":1613445072471,"results":"108","hashOfConfig":"80"},{"size":884,"mtime":1613444012026,"results":"109","hashOfConfig":"80"},{"size":1739,"mtime":1613443806436,"results":"110","hashOfConfig":"80"},{"size":2438,"mtime":1613440257467,"results":"111","hashOfConfig":"80"},{"size":3846,"mtime":1613477357421,"results":"112","hashOfConfig":"80"},{"size":2934,"mtime":1613440521502,"results":"113","hashOfConfig":"80"},{"size":2356,"mtime":1613440549005,"results":"114","hashOfConfig":"80"},{"size":3295,"mtime":1613440493236,"results":"115","hashOfConfig":"80"},{"size":1627,"mtime":1613415329698,"results":"116","hashOfConfig":"80"},{"size":579,"mtime":1613379754278,"results":"117","hashOfConfig":"80"},{"size":3118,"mtime":1613440412047,"results":"118","hashOfConfig":"80"},{"size":1392,"mtime":1613440506475,"results":"119","hashOfConfig":"80"},{"size":704,"mtime":1613477418415,"results":"120","hashOfConfig":"80"},{"size":3405,"mtime":1613436647229,"results":"121","hashOfConfig":"80"},{"size":1371,"mtime":1613212464284,"results":"122","hashOfConfig":"80"},{"size":1349,"mtime":1613444111673,"results":"123","hashOfConfig":"80"},{"size":3765,"mtime":1613058331190,"results":"124","hashOfConfig":"80"},{"size":1237,"mtime":1613440404155,"results":"125","hashOfConfig":"80"},{"size":1184,"mtime":1613208882456,"results":"126","hashOfConfig":"80"},{"size":1051,"mtime":1613208367302,"results":"127","hashOfConfig":"80"},{"size":5244,"mtime":1613381356566,"results":"128","hashOfConfig":"80"},{"size":300,"mtime":1613290899824,"results":"129","hashOfConfig":"80"},{"size":2252,"mtime":1613440462959,"results":"130","hashOfConfig":"80"},{"size":1003,"mtime":1613058331187,"results":"131","hashOfConfig":"80"},{"size":1855,"mtime":1613058331188,"results":"132","hashOfConfig":"80"},{"size":4388,"mtime":1613380854036,"results":"133","hashOfConfig":"80"},{"size":125,"mtime":1613208261723,"results":"134","hashOfConfig":"80"},{"size":2734,"mtime":1613440338166,"results":"135","hashOfConfig":"80"},{"size":444,"mtime":1613208227536,"results":"136","hashOfConfig":"80"},{"size":3467,"mtime":1613440415918,"results":"137","hashOfConfig":"80"},{"size":1386,"mtime":1613058331187,"results":"138","hashOfConfig":"80"},{"size":397,"mtime":1613444602850,"results":"139","hashOfConfig":"80"},{"size":113,"mtime":1613439734949,"results":"140","hashOfConfig":"80"},{"size":96,"mtime":1613439889323,"results":"141","hashOfConfig":"80"},{"size":102,"mtime":1613439684585,"results":"142","hashOfConfig":"80"},{"size":97,"mtime":1613439717508,"results":"143","hashOfConfig":"80"},{"size":101,"mtime":1613439663979,"results":"144","hashOfConfig":"80"},{"size":399,"mtime":1613444464320,"results":"145","hashOfConfig":"80"},{"size":106,"mtime":1613439924039,"results":"146","hashOfConfig":"80"},{"size":104,"mtime":1613439673076,"results":"147","hashOfConfig":"80"},{"size":102,"mtime":1613439748080,"results":"148","hashOfConfig":"80"},{"size":87,"mtime":1613439775541,"results":"149","hashOfConfig":"80"},{"size":103,"mtime":1613439879830,"results":"150","hashOfConfig":"80"},{"size":87,"mtime":1613439787811,"results":"151","hashOfConfig":"80"},{"size":90,"mtime":1613439866164,"results":"152","hashOfConfig":"80"},{"size":100,"mtime":1613439699143,"results":"153","hashOfConfig":"80"},{"size":91,"mtime":1613439899335,"results":"154","hashOfConfig":"80"},{"size":82,"mtime":1613439606760,"results":"155","hashOfConfig":"80"},{"size":84,"mtime":1613439910150,"results":"156","hashOfConfig":"80"},{"size":1158,"mtime":1613444540031,"results":"157","hashOfConfig":"80"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},"o4hfpx",{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"160"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"160"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"160"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"160"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"160"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"160"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"160"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"160"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"160"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"160"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\index.js",[],["327","328"],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\App.js",["329"],"import axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport AppRouter from \"./components/Router\";\r\n\r\nfunction App({ userId }) {\r\n\r\n \r\n  return (\r\n    <div style={{ backgroundColor: \"#36393f\", overflow: 'hidden',height: \"100vh\", width: \"100%\" }}>\r\n      <AppRouter userId={userId} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userId: state.auth.user.id,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(App);\r\n","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\reportWebVitals.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\styles\\muiTheme.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\redux\\store.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Router.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\redux\\history.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\redux\\reducers\\rootReducer.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\redux\\reducers\\cacheReducer.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\redux\\reducers\\authReducer.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\redux\\reducers\\appReducer.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\pages\\MobileLanding.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\pages\\Login.js",["330","331","332"],"import { faAt, faCommentDots } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  Button,\r\n  makeStyles,\r\n  Typography,\r\n  TextField,\r\n  Fade,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { setAuthUserRedux } from \"../redux/actions/authActions\";\r\nimport config from \"../config\";\r\nimport usersHttp from \"../http/users.http\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    transform: \"rotate(-8deg)\",\r\n    color: theme.palette.secondary.main,\r\n    margin: \"1vh\",\r\n  },\r\n  title: {\r\n    \"-webkit-text-stroke\": `.5px ${theme.palette.secondary.main}`,\r\n    color: theme.palette.primary.light,\r\n    fontWeight: 700,\r\n    fontSize: 50,\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    border: `.25px solid ${theme.palette.secondary.main}`,\r\n    height: \"300px\",\r\n    display: \"flex\",\r\n    width: \"400px\",\r\n    position: \"relative\",\r\n    flexDirection: \"column\",\r\n  },\r\n\r\n  flexRow: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n  },\r\n  footer: {\r\n    position: \"absolute\",\r\n    backgroundColor: theme.palette.secondary.dark,\r\n    bottom: 0,\r\n    width: \"100%\",\r\n    height: 60,\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  content: {\r\n    marginTop: 72,\r\n  },\r\n  header: {\r\n    position: \"absolute\",\r\n\r\n    backgroundColor: theme.palette.secondary.dark,\r\n    top: 0,\r\n    width: \"100%\",\r\n    height: 40,\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  input: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n    color: \"white\",\r\n    fontWeight: 600,\r\n    height: 42,\r\n    fontSize: 12,\r\n    margin: 10,\r\n    padding: 2,\r\n  },\r\n  muiInput: {\r\n    width: \"80%\",\r\n  },\r\n  btn2: {\r\n    marginLeft: \"auto\",\r\n    margin: 14,\r\n    height: 32,\r\n  },\r\n  tabItem: {\r\n    fontWeight: 700,\r\n    fontSize: 20,\r\n  },\r\n  headerText: {\r\n    margin: 10,\r\n    color: \"lightgrey\",\r\n    fontSize: \"1.25rem\",\r\n  },\r\n  focused: {},\r\n}));\r\nconst Login = ({ setAuthUser, history }) => {\r\n  const classes = useStyles();\r\n  const [loggingIn, setLoggingIn] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [tab, setTab] = useState(\"Login\");\r\n  const handleInitSignIn = async () => {\r\n    setLoggingIn(true);\r\n    const user = await usersHttp.loginUser(config.devUser);\r\n    setAuthUser(user);\r\n    setTimeout(async () => {\r\n      history.push(\"/\");\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        opacity: loggingIn ? 0 : 1,\r\n        transition: \"2s all\",\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        flexDirection: \"column\",\r\n        backgroundColor: \"\",\r\n      }}\r\n    >\r\n      <Typography className={classes.title}>\r\n        Chatterona\r\n        <FontAwesomeIcon\r\n          icon={faCommentDots}\r\n          className={classes.icon}\r\n        ></FontAwesomeIcon>\r\n      </Typography>\r\n      <Paper elevation={24} className={classes.paper}>\r\n        <Paper square className={classes.header}>\r\n          { ['Login', 'Sign up'].map((item) => (\r\n            <Paper\r\n            style={{\r\n              backgroundColor: tab === item ? \"#7289da\" : \"transparent\",\r\n              cursor: 'pointer',\r\n              transition: 'all .5s',\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: 'center',\r\n              opacity: \".8\",\r\n              height: \"100%\",\r\n              width: \"50%\",\r\n            }}\r\n            onClick={() => setTab(item)}\r\n            square\r\n          >\r\n            <Typography style={{ opacity: tab === item ? \".8\" : \".25\",}} className={classes.tabItem}>{item}</Typography>\r\n          </Paper>\r\n          ))}\r\n          \r\n        </Paper>\r\n        <div className={classes.content}>\r\n          <div className={classes.flexRow}>\r\n            <TextField\r\n              autoFocus={true}\r\n              placeholder=\"username\"\r\n              color=\"secondary\"\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <FontAwesomeIcon\r\n                    style={{\r\n                      color: \"grey\",\r\n                      marginLeft: 8,\r\n                      fontSize: 16,\r\n                      marginRight: 4,\r\n                    }}\r\n                    icon={faAt}\r\n                  />\r\n                ),\r\n                className: classes.input,\r\n                focused: classes.focused,\r\n                notchedOutline: classes.notchedOutline,\r\n              }}\r\n              className={classes.muiInput}\r\n              id=\"username\"\r\n              variant=\"outlined\"\r\n            ></TextField>\r\n          </div>\r\n          <div className={classes.flexRow}>\r\n            <TextField\r\n              placeholder=\"password\"\r\n              color=\"secondary\"\r\n              InputProps={{\r\n                className: classes.input,\r\n                focused: classes.focused,\r\n                notchedOutline: classes.notchedOutline,\r\n              }}\r\n              className={classes.muiInput}\r\n              id=\"username\"\r\n              variant=\"outlined\"\r\n            ></TextField>\r\n          </div>\r\n          <Paper square className={classes.footer}>\r\n            <Button onClick={handleInitSignIn} className={classes.btn2} color=\"secondary\">\r\n              Get started\r\n            </Button>\r\n          </Paper>\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setAuthUser: dispatch(setAuthUserRedux),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Login);\r\n\r\n// import { faAt, faCommentDots } from \"@fortawesome/free-solid-svg-icons\";\r\n// import { useState } from \"react\";\r\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n// import {\r\n//   Button,\r\n//   makeStyles,\r\n//   Typography,\r\n//   TextField,\r\n//   Fade,\r\n// } from \"@material-ui/core\";\r\n// import { connect } from \"react-redux\";\r\n// import { setAuthUserRedux } from \"../redux/actions/authActions\";\r\n// import config from \"../config\";\r\n// import usersHttp from \"../http/users.http\";\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   input: {\r\n//     \"&::placeholder\": {\r\n//       color: \"white\",\r\n//     },\r\n\r\n//     backgroundColor: theme.palette.primary.dark,\r\n//     color: \"white\",\r\n//     fontWeight: 600,\r\n//     height: 36,\r\n//     fontSize: 12,\r\n//     padding: 2,\r\n//   },\r\n//   muiInput: {\r\n//     marginTop: 80,\r\n//     width: 200,\r\n//   },\r\n//   focused: {},\r\n// }));\r\n// const Login = ({ setAuthUser, history }) => {\r\n//   const classes = useStyles();\r\n//   const [loggingIn, setLoggingIn] = useState(false);\r\n//   const [username, setUsername] = useState(\"\");\r\n\r\n//   const handleInitSignIn = async () => {\r\n//     setLoggingIn(true);\r\n//     const user = await usersHttp.loginUser(config.devUser);\r\n//     setAuthUser(user);\r\n//     setTimeout(async () => {\r\n//       history.push(\"/\");\r\n//     }, 1000);\r\n//   };\r\n\r\n//   return (\r\n//     <div\r\n//       style={{\r\n//         opacity: loggingIn ? 0 : 1,\r\n//         transition: \"2s all\",\r\n//         display: \"flex\",\r\n//         paddingTop: \"30vh\",\r\n//         alignItems: \"center\",\r\n//         justifyContent: \"middle\",\r\n//         flexDirection: \"column\",\r\n//       }}\r\n//     >\r\n//       <Typography\r\n//         style={{\r\n//           color: \"white\",\r\n//           transition: \"2s all\",\r\n//           opacity: loggingIn ? 0 : 1,\r\n//           transform: `rotate(-${loggingIn ? 0 : 10}deg)`,\r\n//           fontSize: loggingIn ? 100 : 50,\r\n//         }}\r\n//       >\r\n//         Chatterona\r\n//         <FontAwesomeIcon\r\n//           icon={faCommentDots}\r\n//           style={{\r\n//             transform: \"rotate(-8deg)\",\r\n//             color: \"#3d1059\",\r\n//             margin: \"1vh\",\r\n//           }}\r\n//         ></FontAwesomeIcon>\r\n//       </Typography>\r\n\r\n//       <TextField\r\n//         autoFocus\r\n//         placeholder=\"username\"\r\n//         color=\"secondary\"\r\n//         onChange={({ target: { value } }) => setUsername(value)}\r\n//         InputProps={{\r\n//           startAdornment: (\r\n//             <FontAwesomeIcon\r\n//               style={{ color: \"grey\", marginLeft: 8, marginRight: 4 }}\r\n//               icon={faAt}\r\n//             />\r\n//           ),\r\n//           className: classes.input,\r\n//           focused: classes.focused,\r\n//           notchedOutline: classes.notchedOutline,\r\n//         }}\r\n//         className={classes.muiInput}\r\n//         autoFocus\r\n//         id=\"server-name\"\r\n//         variant=\"outlined\"\r\n//         margin=\"dense\"\r\n//       ></TextField>\r\n//       <Fade in={!username.length} timeout={1000}>\r\n//         <div>\r\n//           <Typography\r\n//             style={{\r\n//               color: \"white\",\r\n//               position: \"absolute\",\r\n//               left: \"49vw\",\r\n//               top: 454,\r\n//               fontWeight: 800,\r\n//               transform: \"rotate(-8deg)\",\r\n//               opacity: loggingIn ? 0 : 1,\r\n//               transform: `rotate(-${loggingIn ? 0 : 10}deg)`,\r\n\r\n//             }}\r\n//           >\r\n//             OR\r\n//           </Typography>\r\n//           <Button\r\n//             style={{\r\n//               width: 200,\r\n//               marginTop: 30,\r\n//               backgroundColor: \"#3d1059\",\r\n//               color: \"white\",\r\n//               height: 36,\r\n//               fontWeight: 600,\r\n//               textTransform: \"none\",\r\n//             }}\r\n//             onClick={handleInitSignIn}\r\n//           >\r\n//             Continue as a bot\r\n//           </Button>\r\n//         </div>\r\n//       </Fade>\r\n\r\n//       <Fade in={username.length} timeout={1500}>\r\n//         <div style={{ width: \"100%\", textAlign: \"center\" }}>\r\n//                 <div style={{ display: 'flex', color: 'white', fontWeight: 700, justifyContent: 'center'}}>\r\n\r\n//           { [\"P\", \"r\", \"e\", \"s\", \"s\", \"  \", \"e\", \"n\", \"t\", \"e\", \"r\"].map(\r\n//               (letter, i) => (\r\n//                 <Fade in timeout={i === 0 ? 500 : i * 1500}>\r\n//                   <div style={{ margin: 2, color: 'white'}}>{letter}</div>\r\n//                 </Fade>\r\n//               )\r\n//             )}\r\n//             </div>\r\n//         </div>\r\n//       </Fade>\r\n//       <span\r\n//         style={{\r\n//           position: \"absolute\",\r\n//           color: \"white\",\r\n//           bottom: 4,\r\n//           right: 0,\r\n//           fontSize: 12,\r\n//         }}\r\n//       >\r\n//         2/8/21 6:14PM\r\n//       </span>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   setAuthUser: dispatch(setAuthUserRedux),\r\n// });\r\n\r\n// export default connect(null, mapDispatchToProps)(Login);\r\n","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\pages\\Main.js",["333"],"import { Fade } from \"@material-ui/core\";\r\nimport React, { PureComponent } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Channels from \"../components/Main/Channels/Channels\";\r\nimport Chat from \"../components/Main/Chat/Chat\";\r\nimport Header from \"../components/Main/Header\";\r\nimport Servers from \"../components/Main/Servers/Servers\";\r\nimport ServerUsers from \"../components/Main/Servers/ServerUsers\";\r\nimport channelsHttp from \"../http/channels-http\";\r\nimport serversHttp from \"../http/servers-http\";\r\nimport usersHttp from \"../http/users.http\";\r\nimport {\r\n  setServersRedux,\r\n  setServerIdRedux,\r\n  setChannelsRedux,\r\n  setChannelIdRedux,\r\n  setChannelMessagesRedux,\r\n  setServerUsersRedux,\r\n} from \"../redux/actions/appActions\";\r\nimport { setAuthUserRedux } from \"../redux/actions/authActions\";\r\nimport WebsocketService from \"../services/Websocket\";\r\nimport peer from 'peerjs';\r\n\r\nclass Main extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.messageRef = React.createRef();\r\n  }\r\n  state = {};\r\n  websocket = new WebsocketService(\"ws://localhost:5000\");\r\n\r\n  componentDidMount = async () => {\r\n    this.websocket.initializeWebsocket(this.websocketCallback);\r\n    const { setServers } = this.props;\r\n    const servers = await serversHttp.getServers();\r\n    setServers(servers || []);\r\n    this.selectServer(servers.length ? servers[0].id : \"\");\r\n\r\n\r\n  };\r\n\r\n  websocketCallback = (data) => {\r\n    const { type, message } = data;\r\n    switch (type) {\r\n      case \"send-message\": {\r\n        return this.handleMessageWebsockets(message, message.merge);\r\n      }\r\n      default: {\r\n        console.log(\"nice\");\r\n      }\r\n    }\r\n  };\r\n\r\n  createServer = async (server) => {\r\n    const { servers, setServers } = this.props;\r\n    const newServer = await serversHttp.createServer(server);\r\n    setServers([...servers, newServer]);\r\n    this.selectServer(newServer.id);\r\n  };\r\n\r\n  selectServer = async (serverId) => {\r\n    const { setServerId, setChannels } = this.props;\r\n    setServerId(serverId || \"\");\r\n    const server = await serversHttp.getServer(serverId);\r\n    setChannels(server ? server.channels : []);\r\n    this.selectChannel(\r\n      server.channels && server.channels.length ? server.channels[0].id : \"\"\r\n    );\r\n    if (serverId) this.getServerUsers(serverId);\r\n  };\r\n\r\n  createChannel = () => {\r\n    // const { servers, setServers } = this.props;\r\n    // const newServer = await serversHttp.createServer(server);\r\n    // setServers([...servers, newServer]);\r\n  };\r\n\r\n  handleMessageWebsockets = (message, merge) => {\r\n    const { setChannelMessages, messages } = this.props;\r\n    const updatedLast = merge\r\n      ? messages.splice(0, messages.length - 1)\r\n      : messages;\r\n    setChannelMessages([...updatedLast, message]);\r\n  };\r\n\r\n  selectChannel = async (channelId) => {\r\n    const { setChannelId } = this.props;\r\n    setChannelId(channelId);\r\n    this.getChannelMessages(channelId);\r\n    this.websocket.joinChannel(channelId);\r\n  };\r\n\r\n  getChannelMessages = async (channelId) => {\r\n    const { setChannelMessages } = this.props;\r\n    const messages = await channelsHttp.getChannelMessages(channelId, 1, 6);\r\n    setChannelMessages(messages);\r\n  };\r\n\r\n  sendWebsocketMessage = (channelId, message, merge) => {\r\n    this.websocket.sendMessage(channelId, message, merge);\r\n  };\r\n\r\n  getServerUsers = async (serverId) => {\r\n    const { setServerUsers } = this.props;\r\n    const users = await serversHttp.getServerUsers(serverId);\r\n    setServerUsers(users);\r\n  };\r\n\r\n  logoutUser = async () => {\r\n    const { history } = this.props;\r\n\r\n    await usersHttp.logoutUser();\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  navigateToUserSettings = () => {\r\n    const { history } = this.props;\r\n    history.push(\"/settings\");\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      servers,\r\n      serverId,\r\n      channels,\r\n      channelId,\r\n      messages,\r\n      username,\r\n      userPhoto,\r\n      users,\r\n    } = this.props;\r\n    const server =\r\n      serverId && servers && servers.find((svr) => svr.id === serverId);\r\n    const channel =\r\n      channelId && channels && channels.find((chl) => chl.id === channelId);\r\n\r\n    return (\r\n      <Fade in timeout={500}>\r\n        <div>\r\n          <Header\r\n            channelName={channel ? channel.name : \"\"}\r\n            logoutUser={this.logoutUser}\r\n          />\r\n\r\n          <Channels\r\n            channels={channels}\r\n            channelId={channelId}\r\n            serverName={server ? server.name : \"nothing\"}\r\n            selectChannel={this.selectChannel}\r\n            createChannel={this.createChannel}\r\n            username={username}\r\n            userPhoto={userPhoto}\r\n            navigateToUserSettings={this.navigateToUserSettings}\r\n          />\r\n          <Servers\r\n            servers={servers}\r\n            serverId={serverId}\r\n            selectServer={this.selectServer}\r\n            createServer={this.createServer}\r\n          />\r\n          <Chat\r\n            username={username}\r\n            typers={this.state.typers}\r\n            messages={messages}\r\n            channelId={channelId}\r\n            getChannelMessages={this.getChannelMessages}\r\n            sendWebsocketMessage={this.sendWebsocketMessage}\r\n            updateTyping={this.updateTyping}\r\n          />\r\n          <ServerUsers users={users} />\r\n        </div>\r\n      </Fade>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  username: state.auth.user.username,\r\n  userPhoto: state.auth.user.photoURL,\r\n  servers: state.app.servers,\r\n  serverId: state.app.serverId,\r\n  channels: state.app.channels,\r\n  channelId: state.app.channelId,\r\n  messages: state.app.messages,\r\n  users: state.app.users,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setServers: dispatch(setServersRedux),\r\n  setServerId: dispatch(setServerIdRedux),\r\n  setChannels: dispatch(setChannelsRedux),\r\n  setChannelId: dispatch(setChannelIdRedux),\r\n  setChannelMessages: dispatch(setChannelMessagesRedux),\r\n  setServerUsers: dispatch(setServerUsersRedux),\r\n  setAuthUser: dispatch(setAuthUserRedux),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\config.js",["334"],"const animals = [\r\n    'https://images.unsplash.com/photo-1493916665398-143bdeabe500?ixid=MXwxMjA3fDB8MHxzZWFyY2h8NHx8YW5pbWFsc3xlbnwwfHwwfA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n    'https://images.unsplash.com/photo-1548199973-03cce0bbc87b?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MXx8ZG9nc3xlbnwwfHwwfA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n    'https://images.unsplash.com/photo-1491604612772-6853927639ef?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MTJ8fGRvZ3N8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n    'https://images.unsplash.com/photo-1517423738875-5ce310acd3da?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MTN8fGZ1bm55JTIwZG9nc3xlbnwwfHwwfA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n    'https://images.unsplash.com/photo-1518020382113-a7e8fc38eac9?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MTd8fGZ1bm55JTIwZG9nc3xlbnwwfHwwfA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n    'https://images.unsplash.com/photo-1552944150-6dd1180e5999?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MTN8fGZ1bm55JTIwY2F0c3xlbnwwfHwwfA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60',\r\n]\r\nconst randomKey = Math.floor(Math.random() * 800).toString();\r\n\r\nconst config = {\r\n    environment: process.env.NODE_ENV,\r\n    devUser: {\r\n        photoURL: animals[Math.floor(Math.random() * 6)],\r\n        username:`Dev_User`, \r\n    },\r\n    node_api_base_url: \"http://localhost:3003/api\",\r\n\r\n}\r\nexport default config;","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\services\\Websocket.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\redux\\actions\\cacheActions.js",[],["335","336"],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\redux\\actions\\appActions.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\http\\servers-http.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\http\\channels-http.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\http\\users.http.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\redux\\actions\\authActions.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\http\\http-configuration.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\constants\\emojis.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\utilities\\global-utilities.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\utilities\\component-utilities.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\_reusable\\Drawer.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\_reusable\\Stepper.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\pages\\UserSettings.js",["337"],"import { withStyles } from \"@material-ui/styles\";\r\nimport { PureComponent } from \"react\";\r\nimport MyAccount from \"../components/UserSettings/MyAccount\";\r\nimport PrivacyAndSafety from \"../components/UserSettings/PrivacyAndSafety\";\r\nimport AuthorizedApps from \"../components/UserSettings/AuthorizedApps\";\r\nimport Connections from \"../components/UserSettings/Connections\";\r\nimport Subscriptions from \"../components/UserSettings/Subscriptions\";\r\nimport ServerBoost from \"../components/UserSettings/ServerBoost\";\r\nimport GiftInventory from \"../components/UserSettings/GiftInventory\";\r\nimport Billing from \"../components/UserSettings/Billing\";\r\nimport VoiceAndVideo from \"../components/UserSettings/VoiceAndVideo\";\r\nimport TextAndImages from \"../components/UserSettings/TextAndImages\";\r\nimport Appearance from \"../components/UserSettings/Appearance\";\r\nimport Notifications from \"../components/UserSettings/Notifications\";\r\nimport Keybinds from \"../components/UserSettings/Keybinds\";\r\nimport Language from \"../components/UserSettings/Language\";\r\nimport StreamerMode from \"../components/UserSettings/StreamerMode\";\r\nimport ChangeLog from \"../components/UserSettings/ChangeLog\";\r\nimport HypeSquad from \"../components/UserSettings/HypeSquad\";\r\nimport LogOut from \"../components/UserSettings/LogOut\";\r\n\r\nimport Drawer from \"../components/_reusable/Drawer\";\r\nimport List from \"../components/_reusable/List\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes, faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst styles = (theme) => ({\r\n  \"@global\": {\r\n    \"*::-webkit-scrollbar-thumb\": {\r\n      backgroundColor: theme.palette.primary.dark,\r\n    },\r\n    \"::-webkit-scrollbar\": {\r\n      width: '4px',\r\n    },\r\n\r\n  },\r\n  pageContainer: { display: \"flex\", flexDirection: \"row\" },\r\n  drawer: {\r\n    backgroundColor: \"#2f3136\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-end\",\r\n    width: \"30%\",\r\n    overflow: 'auto'\r\n  },\r\n  listClass: {\r\n    marginTop: 64,\r\n    width: 200,\r\n  },\r\n  listItemText: {\r\n    fontSize: '1rem'\r\n  },\r\n  backButton: {\r\n    position: 'fixed',\r\n    maxHeight: 40,\r\n    minHeight: 40,\r\n    maxWidth: 40,\r\n    minWidth: 40,\r\n    borderRadius: 20,\r\n    border: '1px solid lightgrey',\r\n    color: 'lightgrey',\r\n    fontSize: 16,\r\n    top: 70,\r\n    right: 140, \r\n    backgroundColor: 'transparent',\r\n    '&:hover': {\r\n      backgroundColor: theme.palette.primary.dark\r\n    }\r\n  }\r\n});\r\n\r\nconst listItems = [\r\n  { name: \"My Account\", header: 'user settings', Component: MyAccount },\r\n  { name: \"Privacy & Safety\", Component: PrivacyAndSafety },\r\n  { name: \"Authorized Apps\", Component: AuthorizedApps },\r\n  { name: \"Connections\", break: true, Component: Connections },\r\n\r\n  { name: \"Subscriptions\", header: 'billing settings', props: { color: \"#677BC4\" }, Component: Subscriptions },\r\n  { name: \"Server Boost\", Component: ServerBoost },\r\n  { name: \"Gift Inventory\", Component: GiftInventory },\r\n  { name: \"Billing\", break: true, Component: Billing },\r\n\r\n  { name: \"Voice & Video\", header: 'app settings', Component: VoiceAndVideo },\r\n  { name: \"Text & Images\", Component: TextAndImages },\r\n  { name: \"Appearance\", Component: Appearance },\r\n  { name: \"Notifications\", Component: Notifications },\r\n  { name: \"Keybinds\", Component: Keybinds },\r\n  { name: \"Language\", Component: Language },\r\n  { name: \"Stremer Mode\", break: true, Component: StreamerMode },\r\n\r\n  { name: \"Change Log\", Component: ChangeLog },\r\n  { name: \"HypeSquad\", break: true, Component: HypeSquad },\r\n  {\r\n    name: \"Log Out\",\r\n    props: { color: \"red\" },\r\n    break: true,\r\n    Component: LogOut,\r\n  },\r\n];\r\n\r\nclass UserSettings extends PureComponent {\r\n  state = {\r\n    selectedPage: listItems[0],\r\n  };\r\n\r\n  handleSelect = (name) => {\r\n    console.log(name)\r\n    const selectedPage = listItems.find((item) => item.name === name);\r\n    this.setState({ selectedPage });\r\n  };\r\n\r\n  render() {\r\n    const { classes, history } = this.props;\r\n    const { selectedPage } = this.state;\r\n    const { Component } = selectedPage;\r\n    return (\r\n      <div className={classes.pageContainer}>\r\n        <Drawer className={classes.drawer}>\r\n          <List\r\n          listItemProps={{\r\n            listItemClass: classes.listItem,\r\n            textClass: classes.listItemText,\r\n            handleSelect: this.handleSelect,\r\n          }}\r\n          listProps={{\r\n            listClass: classes.listClass,\r\n            listItems: listItems,\r\n            headerProps: {\r\n\r\n            }\r\n          }}\r\n    \r\n  \r\n            style={{ padding: 2 }}\r\n          ></List>\r\n        </Drawer>\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            left: \"30%\",\r\n            paddingTop: 70,\r\n            paddingLeft: 36,\r\n            width: \"calc(70% - 130px)\",\r\n          }}\r\n        >\r\n          <Button onClick={() => history.goBack()} variant=\"contained\" className={classes.backButton}>\r\n            <FontAwesomeIcon icon={faTimes}></FontAwesomeIcon>\r\n          </Button>\r\n          <Component />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(UserSettings);\r\n","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\_reusable\\List.js",["338","339","340"],"import { Divider, List as MuiList, makeStyles, Paper } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport ListItem from \"./ListItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menu: {},\r\n}));\r\n\r\nconst List = ({ listProps = {}, listItemProps = {} }) => {\r\n  const { listItems, listClass } = listProps;\r\n  const buildListItems = () => {\r\n    return listItems.map((option) => (\r\n      <div>\r\n        <ListItem listItem={option} listItemProps={listItemProps} />\r\n        {option.break && (\r\n          <Divider\r\n            style={{\r\n              height: 1,\r\n              opacity: 0.25,\r\n              width: \"100%\",\r\n              backgroundColor: \"grey\",\r\n            }}\r\n          ></Divider>\r\n        )}\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return <MuiList className={listClass}>{buildListItems()}</MuiList>;\r\n};\r\n\r\nexport default List;\r\n","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\_reusable\\ListItem.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Header.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Chat\\Chat.js",["341","342"],"import React, { Component, PureComponent } from \"react\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport channelsHttp from \"../../../http/channels-http\";\r\nimport Messages from \"../Messages/Messages\";\r\nimport MessageInput from \"./MessageInput\";\r\nimport Typers from \"./Typers\";\r\nimport {\r\n  determineCanScroll,\r\n  determineChatComponentUpdate,\r\n} from \"../../../utilities/component-utilities\";\r\n\r\nconst styles = () => ({\r\n  \"@global\": {\r\n    \"*::-webkit-scrollbar-thumb\": {\r\n      display: \"none\",\r\n    },\r\n    \"::-webkit-scrollbar\": {\r\n      display: \"none\",\r\n    },\r\n    \"::-webkit-scrollbar-track\": {\r\n      display: \"none\",\r\n    },\r\n    \"::-webkit-scrollbar-thumb\": {\r\n      display: \"none\",\r\n    },\r\n    \"::-webkit-scrollbar-thumb:hover\": {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  chatWrapper: {\r\n    position: \"relative\",\r\n\r\n    padding: 8,\r\n    left: 310,\r\n    width: \"calc(100% - 515px)\",\r\n    height: \"calc(100vh - 48px)\",\r\n  },\r\n  messageWrapper: {\r\n    position: \"relative\",\r\n    top: 40,\r\n  },\r\n  container: {\r\n    maxHeight: \"calc(100vh - 160px)\",\r\n    padding: 0,\r\n    overflow: \"auto\",\r\n  },\r\n});\r\n\r\nclass Chat extends PureComponent {\r\n  state = {\r\n    messages: [],\r\n    lastMessage: null,\r\n  };\r\n\r\n  messageRef = React.createRef();\r\n\r\n  componentDidUpdate = () => {\r\n    const { messages } = this.props;\r\n    const lastMessage = this.getLastMessage(messages);\r\n    const scrollRef = determineCanScroll(this.messageRef);\r\n    this.setState({ messages, lastMessage });\r\n    \r\n    if (scrollRef) {\r\n      // instead of mapping through elements on top of each other, maybe try loading them backwards so we never have to scroll down at the start\r\n      scrollRef.scrollIntoView({ behavior: \"smooth\", block: \"end\" });\r\n    }\r\n  };\r\n\r\n\r\n  // shouldComponentUpdate = (prevProps) => {\r\n  //   // this is actually fast :)\r\n  //   const { messages, channelId } = this.props;\r\n  //   if(messages.length && !this.state.messages.length) return true;\r\n  //   const lastMessage = this.getLastMessage(messages);\r\n  //   const lastMessageUpdated = this.getLastMessageUpdated(lastMessage);\r\n  //   const updateComponent = determineChatComponentUpdate(\r\n  //     lastMessageUpdated,\r\n  //     prevProps,\r\n  //     channelId,\r\n  //     messages\r\n  //   );\r\n  //   return updateComponent;\r\n  // }\r\n\r\n  getLastMessageUpdated = (lastMessage) => {\r\n    const { lastMessage: previousLastMessage } = this.state;\r\n    if (previousLastMessage) {\r\n      return (\r\n        lastMessage &&\r\n        lastMessage.content &&\r\n        lastMessage.content.length !== previousLastMessage.content.length\r\n      );\r\n    }\r\n  };\r\n\r\n  getLastMessage = (messages) => {\r\n    return messages.length && messages[messages.length - 1];\r\n  };\r\n\r\n  determineLastMessage = (message) => {\r\n    const { username } = this.props;\r\n    return message && message.author && message.author.username === username;\r\n  };\r\n\r\n  addMessageToChannel = async (message) => {\r\n    this.setState({ loadingMessage: true });\r\n    const { channelId, sendWebsocketMessage } = this.props;\r\n\r\n    const {\r\n      message: dbMessage,\r\n      merge,\r\n    } = await channelsHttp.createChannelMessage(\r\n      channelId,\r\n      message,\r\n    );\r\n    sendWebsocketMessage(channelId, dbMessage, merge);\r\n    this.setState({ loadingMessage: false });\r\n  };\r\n\r\n  render() {\r\n    const { messages } = this.state;\r\n    const { classes, typers } = this.props;\r\n    return (\r\n      <div className={classes.chatWrapper}>\r\n        <div className={classes.messageWrapper}>\r\n          <div className={classes.container}>\r\n            <Messages messages={messages} messageRef={this.messageRef} />\r\n          </div>\r\n        </div>\r\n        <Typers typers={typers} />\r\n        <MessageInput addMessageToChannel={this.addMessageToChannel} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Chat);\r\n","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Servers\\Servers.js",["343"],"import { Divider, makeStyles } from \"@material-ui/core\";\r\nimport Drawer from \"../../_reusable/Drawer\";\r\nimport { useEffect } from 'react';\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport VideogameAssetIcon from \"@material-ui/icons/VideogameAsset\";\r\nimport { useState } from \"react\";\r\nimport serversHttp from \"../../../http/servers-http\";\r\nimport ServerListItem from \"./ServerListItem\";\r\nimport AddServerDialog from \"../AddServerDialog/AddServerDialog\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \"@global\": {\r\n    \"*::-webkit-scrollbar-thumb\": {\r\n      display: \"none\",\r\n    },\r\n    \"::-webkit-scrollbar\": {\r\n      display: \"none\",\r\n    },\r\n    \"::-webkit-scrollbar-track\": {\r\n      display: \"none\",\r\n    },\r\n    \"::-webkit-scrollbar-thumb\": {\r\n      display: \"none\",\r\n    },\r\n    \"::-webkit-scrollbar-thumb:hover\": {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  drawer: {\r\n    height: \"100vh\",\r\n    overflowY: \"auto\",\r\n    display: \"flex\",\r\n    width: \"72px\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#202225\",\r\n  },\r\n  divider: {\r\n    backgroundColor: \"#1e1e1e\",\r\n    margin: \"0 16px 0 16px\",\r\n    height: 1,\r\n    width: \"calc(100% - 32px)\",\r\n  },\r\n}));\r\nconst Servers = ({ servers, serverId, selectServer, createServer }) => {\r\n\r\n  const [selected, setSelected] = useState(\"Home\");\r\n  const [showAddServerDialog, setAddServerDialogOpen] = useState(false);\r\n  const isSelected = (id) => selected === id;\r\n\r\n  useEffect(() => {\r\n    setSelected(serverId)\r\n  }, [serverId]);\r\n\r\n\r\n  const handleAddServer = async (server) => {\r\n    createServer(server)\r\n    setAddServerDialogOpen(false);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <Drawer anchor=\"left\" className={classes.drawer}>\r\n      <ServerListItem\r\n        title=\"Home\"\r\n        id=\"Home\"\r\n        selected={isSelected(\"Home\")}\r\n        setSelected={setSelected}\r\n      >\r\n        <VideogameAssetIcon />\r\n      </ServerListItem>\r\n      <Divider className={classes.divider} />\r\n      {servers &&\r\n        servers.map((svr) => (\r\n          <ServerListItem\r\n            title={svr.name}\r\n            id={svr.id}\r\n            setSelected={() => setSelected(svr.id)}\r\n            selected={isSelected(svr.id)}\r\n            listItemProps={{\r\n              onClick: () => selectServer(svr.id),\r\n              style: { backgroundImage: `url(${svr.photoURL})` },\r\n            }}\r\n          />\r\n        ))}\r\n      <ServerListItem\r\n        title=\"Add a server\"\r\n        id=\"Add a server\"\r\n        setSelected={setSelected}\r\n        selected={isSelected(\"Add a server\")}\r\n        listItemProps={{\r\n          onClick: () => setAddServerDialogOpen(true),\r\n        }}\r\n      >\r\n        <AddIcon />\r\n      </ServerListItem>\r\n      <AddServerDialog\r\n        showAddServerDialog={showAddServerDialog}\r\n        handleAddServer={handleAddServer}\r\n        setAddServerDialogOpen={setAddServerDialogOpen}\r\n      />\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default Servers;\r\n","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Servers\\ServerUsers.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Channels\\Channels.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Servers\\ServerListItem.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Chat\\Typers.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Chat\\MessageInput.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\AddServerDialog\\AddServerDialog.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Messages\\Messages.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Channels\\ChannelBottomUser.js",["344","345"],"import {\r\n    Typography,\r\n    Paper,\r\n    Button,\r\n  } from \"@material-ui/core\";\r\n  import { makeStyles } from \"@material-ui/styles\";\r\n  import {\r\n    faCog,\r\n    faHeadphones,\r\n    faMicrophone,\r\n  } from \"@fortawesome/free-solid-svg-icons\";\r\n  import _ from \"lodash\";\r\n  import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n  import ChannelBottomGame from './ChannelBottomGame';\r\n  \r\n  const useStyles = makeStyles(() => ({\r\n    mainPaper: {\r\n      position: \"absolute\",\r\n      backgroundColor: \"#292b2f\",\r\n      bottom: 0,\r\n      left: 74,\r\n\r\n      width: \"calc(100% - 74px)\",\r\n      display: \"flex\",\r\n      flexDirection: 'column',\r\n    \r\n    },\r\n    userSection: {\r\n      backgroundColor: \"#292b2f\",\r\n      bottom: 0,\r\n      left: 74,\r\n      padding: 8,\r\n      display: \"flex\",\r\n      flexDirection: 'column',\r\n    \r\n    },\r\n    activeIcon: {\r\n      height: 10,\r\n      width: 10,\r\n      border: \"3px solid #2f3136\",\r\n      backgroundColor: \"#20b673\",\r\n      borderRadius: 12,\r\n      position: \"absolute\",\r\n      bottom: -2,\r\n      left: 16,\r\n    },\r\n    avatar: {\r\n      minHeight: 30,\r\n      borderRadius: 15,\r\n      position: 'relative',\r\n      backgroundSize: \"contain\",\r\n      marginLeft: 8,\r\n      cursor: \"pointer\",\r\n      height: 30,\r\n      width: 30,\r\n    },\r\n    userWrapper: {\r\n      width: \"100%\",\r\n      border: \"1px solid white\",\r\n      display: \"flex\",\r\n    },\r\n    flexContainer: {\r\n        marginLeft: \"auto\",\r\n    },\r\n    iconBtn: {\r\n      maxWidth: \"30px\",\r\n      maxHeight: \"30px\",\r\n      minWidth: \"30px\",\r\n      minHeight: \"30px\",\r\n    },\r\n    icon: {\r\n      color: \"grey\",\r\n      fontSize: 16,\r\n    },\r\n  }));\r\n\r\nconst ChannelBottomUser = ({ username, userPhoto, navigateToUserSettings }) => {\r\n\r\n    const classes = useStyles();\r\n  return (\r\n    <Paper square className={classes.mainPaper}>\r\n\r\n      {/* <ChannelBottomGame/> */}\r\n    <Paper className={classes.userSection}>\r\n\r\n\r\n      <div\r\n        style={{\r\n          alignItems: \"center\",\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n        }}\r\n      >\r\n        <Paper\r\n          style={{ backgroundImage: `url(${userPhoto})` }}\r\n          className={classes.avatar}\r\n        >\r\n          <div className={classes.activeIcon} />\r\n        </Paper>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            marginLeft: 4,\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          <Typography\r\n            style={{\r\n              flexGrow: 1,\r\n              fontSize: 12,\r\n              color: \"#fff\",\r\n              fontWeight: 800,\r\n            }}\r\n          >\r\n            {username}\r\n          </Typography>\r\n          <span style={{ fontSize: 10, color: \"grey\", fontWeight: 700 }}>\r\n            #3737\r\n          </span>\r\n        </div>\r\n        <div className={classes.flexContainer}>\r\n          <Button className={classes.iconBtn}>\r\n            <FontAwesomeIcon className={classes.icon} icon={faMicrophone} />\r\n          </Button>\r\n          <Button className={classes.iconBtn}>\r\n            <FontAwesomeIcon className={classes.icon} icon={faHeadphones} />\r\n          </Button>\r\n          <Button className={classes.iconBtn}>\r\n            <FontAwesomeIcon onClick={navigateToUserSettings} className={classes.icon} icon={faCog} />\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Paper>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ChannelBottomUser;","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Channels\\ChannelGroup.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Channels\\HeaderOptions.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Channels\\CreateChannelDialog.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Channels\\ChannelHeader.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Messages\\NewDayDivider.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Messages\\NoMessagesDisplay.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Messages\\MessageItem.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Channels\\ChannelBottomGame.js",["346"],"\r\nconst ChannelBottomGame = ({ }) => {\r\n    return (\r\n      <div\r\n        style={{\r\n          height: 40,\r\n          backgroundColor: \"#292b2f\",\r\n          width: \"calc(100% - 4px)\",\r\n          borderBottom: \"1px solid grey\",\r\n        }}\r\n      ></div> \r\n    )\r\n}\r\n\r\nexport default ChannelBottomGame;","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Channels\\ChannelListItem.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\AddServerDialog\\pages\\PageOne.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\AddServerDialog\\pages\\PageTwo.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\AddServerDialog\\pages\\PageThree.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Messages\\MessageItemText.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Messages\\EmojiPicker.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Messages\\MessageItemImage.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\Messages\\MessageItemLink.js",["347","348"],"import { Dialog, makeStyles, Paper, Typography } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { useState } from \"react\";\r\nimport { truncateString } from \"../../../utilities/global-utilities\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"relative\",\r\n    textAlign: \"center\",\r\n    width: 400,\r\n    height: 200,\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\nfooterButton: {\r\n  color: \"#fff\",\r\n  backgroundColor: theme.palette.secondary.main,\r\n  \"&:hover\": {\r\n    backgroundColor: \"#4f4f4f\",\r\n  },\r\n},\r\n  link: {\r\n    padding: 12,\r\n    textDecoration: \"none\",\r\n    flexWrap: \"nowrap\",\r\n    width: 400,\r\n    color: \"white\",\r\n    backgroundColor: \"#2f3136\",\r\n    cursor: \"pointer\",\r\n  },\r\n  linkBody: {\r\n    display: \"flex\",\r\n    height: 40,\r\n    width: \"100%\",\r\n    flexWrap: \"nowrap\",\r\n  },\r\n  linkBody2: {},\r\n}));\r\nconst MessageItemLink = ({ content }) => {\r\n  const classes = useStyles();\r\n  const [showNavDialog, setNavDialog] = useState(false);\r\n  const toggleDialog = () => {\r\n    setNavDialog(!showNavDialog);\r\n  };\r\n\r\n  const displayContent = (key) => {\r\n    return content[key] && content[key] !== \"Unknown\"\r\n      ? truncateString(content[key], 100)\r\n      : \"\";\r\n  };\r\n  const navigateToNewPage = () => {\r\n    const newWindow = window.open(content.message, '_blank');\r\n    newWindow.focus();\r\n  }\r\n\r\n  const LinkDialog = () => {\r\n    return (\r\n      <Dialog\r\n        PaperProps={{\r\n          className: classes.paper,\r\n        }}\r\n        open={showNavDialog}\r\n        onClose={toggleDialog}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle style={{ color: 'white'}} id=\"alert-dialog-title\">\r\n          Do you trust this link?\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText style={{ color: 'white'}} id=\"alert-dialog-description\">\r\n            Clicking this link will navigate you to a new tab.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n\r\n        <Button\r\n          onClick={navigateToNewPage}\r\n          className={classes.footerButton}\r\n        >\r\n          Proceed\r\n        </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  };\r\n  return (\r\n    <Paper elevation={2} onClick={toggleDialog} className={classes.link}>\r\n      <div className={classes.linkBody}>\r\n        {content.icon && (\r\n          <img\r\n            src={content.icon}\r\n            style={{ height: 40, marginRight: 8, width: 40 }}\r\n          />\r\n        )}\r\n        <Typography style={{ width: \"100%\", marginTop: 8, fontWeight: 600 }}>\r\n          {\" \"}\r\n          {displayContent(\"site\")}\r\n        </Typography>\r\n      </div>\r\n      <div className={classes.linkBody2}>\r\n        {content.img && (\r\n          <img\r\n            src={content.img}\r\n            style={{ height: \"300px\", width: \"100%\", marginTop: 8 }}\r\n          />\r\n        )}\r\n        <Typography style={{ width: \"100%\", marginTop: 8, fontWeight: 600 }}>\r\n          {\" \"}\r\n          {displayContent(\"title1\")}\r\n        </Typography>\r\n\r\n      </div>\r\n      <LinkDialog />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default MessageItemLink;\r\n","C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\Main\\AddServerDialog\\DialogItem.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\MyAccount.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\PrivacyAndSafety.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\Connections.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\Subscriptions.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\ServerBoost.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\TextAndImages.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\Appearance.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\AuthorizedApps.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\VoiceAndVideo.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\Notifications.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\Language.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\GiftInventory.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\Keybinds.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\HypeSquad.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\StreamerMode.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\ChangeLog.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\LogOut.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\UserSettings\\Billing.js",[],"C:\\Code\\projects\\chatterona_root\\chatterona_ui_heroku\\src\\components\\_reusable\\ListItemHeader.js",[],{"ruleId":"349","replacedBy":"350"},{"ruleId":"351","replacedBy":"352"},{"ruleId":"353","severity":1,"message":"354","line":1,"column":8,"nodeType":"355","messageId":"356","endLine":1,"endColumn":13},{"ruleId":"353","severity":1,"message":"357","line":9,"column":3,"nodeType":"355","messageId":"356","endLine":9,"endColumn":7},{"ruleId":"353","severity":1,"message":"358","line":101,"column":10,"nodeType":"355","messageId":"356","endLine":101,"endColumn":18},{"ruleId":"353","severity":1,"message":"359","line":101,"column":20,"nodeType":"355","messageId":"356","endLine":101,"endColumn":31},{"ruleId":"353","severity":1,"message":"360","line":22,"column":8,"nodeType":"355","messageId":"356","endLine":22,"endColumn":12},{"ruleId":"353","severity":1,"message":"361","line":9,"column":7,"nodeType":"355","messageId":"356","endLine":9,"endColumn":16},{"ruleId":"349","replacedBy":"362"},{"ruleId":"351","replacedBy":"363"},{"ruleId":"353","severity":1,"message":"364","line":26,"column":19,"nodeType":"355","messageId":"356","endLine":26,"endColumn":32},{"ruleId":"353","severity":1,"message":"365","line":1,"column":48,"nodeType":"355","messageId":"356","endLine":1,"endColumn":53},{"ruleId":"353","severity":1,"message":"366","line":2,"column":8,"nodeType":"355","messageId":"356","endLine":2,"endColumn":12},{"ruleId":"353","severity":1,"message":"367","line":29,"column":9,"nodeType":"355","messageId":"356","endLine":29,"endColumn":16},{"ruleId":"353","severity":1,"message":"368","line":1,"column":17,"nodeType":"355","messageId":"356","endLine":1,"endColumn":26},{"ruleId":"353","severity":1,"message":"369","line":9,"column":3,"nodeType":"355","messageId":"356","endLine":9,"endColumn":31},{"ruleId":"353","severity":1,"message":"370","line":7,"column":8,"nodeType":"355","messageId":"356","endLine":7,"endColumn":19},{"ruleId":"353","severity":1,"message":"371","line":12,"column":10,"nodeType":"355","messageId":"356","endLine":12,"endColumn":11},{"ruleId":"353","severity":1,"message":"372","line":14,"column":10,"nodeType":"355","messageId":"356","endLine":14,"endColumn":27},{"ruleId":"373","severity":1,"message":"374","line":2,"column":28,"nodeType":"375","messageId":"376","endLine":2,"endColumn":31},{"ruleId":"377","severity":1,"message":"378","line":95,"column":11,"nodeType":"379","endLine":98,"endColumn":13},{"ruleId":"377","severity":1,"message":"378","line":107,"column":11,"nodeType":"379","endLine":110,"endColumn":13},"no-native-reassign",["380"],"no-negated-in-lhs",["381"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'Fade' is defined but never used.","'username' is assigned a value but never used.","'setUsername' is assigned a value but never used.","'peer' is defined but never used.","'randomKey' is assigned a value but never used.",["380"],["381"],"'faTimesCircle' is defined but never used.","'Paper' is defined but never used.","'clsx' is defined but never used.","'classes' is assigned a value but never used.","'Component' is defined but never used.","'determineChatComponentUpdate' is defined but never used.","'serversHttp' is defined but never used.","'_' is defined but never used.","'ChannelBottomGame' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]